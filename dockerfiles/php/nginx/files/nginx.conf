# run nginx in foreground
daemon off;
user sitepilot sitepilot;

error_log /var/www/logs/nginx/error.log warn;
pid /var/run/nginx.pid;

worker_processes  auto;
events {
    worker_connections  4096;
}

http {
  sendfile on;
  include    /etc/nginx/mime.types;
  include    /etc/nginx/fastcgi.conf;
  default_type application/octet-stream;
  tcp_nopush   on;
  client_body_temp_path /tmp/nginx/body 1 2;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;
  
  #a new log format for detecting bad bots.
  log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';
  
  
  ## This log format makes it so we can see real requester's IP address \
  ##    not just the reverse proxy server's IP address. Also note, that \
  ##    "specialLog" can be replaced with any name you would like to \
  ##    give to this log format.
  log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent"';
  
  client_max_body_size 100M;
  
  server {
    server_name {APP_DOMAIN};
    set_real_ip_from 127.0.0.1;
    set_real_ip_from 10.0.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    #listen       [::]:80; #uncomment for IPv6 support
    listen       80;
    
    root /var/www/html;
    index  index.php index.html index.htm;
    access_log /var/www/logs/nginx/access.log specialLog;
    error_log /var/www/logs/nginx/error.log;
    
    disable_symlinks off;
    
    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }
    
    # deny dot-files
    location ~ /\. { 
      deny all;
      access_log off;
      log_not_found off; 
    }

    #Yoast SEO Sitemaps
    location ~ ([^/]*)sitemap(.*).x(m|s)l$ {
      ## this redirects sitemap.xml to /sitemap_index.xml
      rewrite ^/sitemap.xml$ /sitemap_index.xml permanent;
      ## this makes the XML sitemaps work
      rewrite ^/([a-z]+)?-?sitemap.xsl$ /index.php?xsl=$1 last;
      rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
      rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
      ## The following lines are optional for the premium extensions
      ## News SEO
      rewrite ^/news-sitemap.xml$ /index.php?sitemap=wpseo_news last;
      ## Local SEO
      rewrite ^/locations.kml$ /index.php?sitemap=wpseo_local_kml last;
      rewrite ^/geo-sitemap.xml$ /index.php?sitemap=wpseo_local last;
      ## Video SEO
      rewrite ^/video-sitemap.xsl$ /index.php?xsl=video last;
    } 

    location / {
      try_files $uri $uri/ /index.php?$args;
    }
    
    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
    	deny all;
    }
        
    ## Disable .htaccess and other hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        access_log        off;
        log_not_found     off;
        expires           360d;
    }   

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      if (!-f $document_root$fastcgi_script_name) {
        return 404;
      }
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_param HTTPS 'on';
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }
    
    ## Block SQL injections
    location ~* union.*select.*\( { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* union.*all.*select.* { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* concat.*\( { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    
    ## Block common exploits
    location ~* (<|%3C).*script.*(>|%3E) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* base64_(en|de)code\(.*\) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* (%24&x) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* (%0|%A|%B|%C|%D|%E|%F|127\.0) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* \.\.\/  { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* ~$ { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* proc/self/environ { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* /\.(htaccess|htpasswd|svn) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    
    ## Block file injections
    location ~* [a-zA-Z0-9_]=(\.\.//?)+ { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    
    ## wordpress security
    location ~* wp-config.php { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* wp-admin/includes { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* wp-app\.log { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }
    location ~* (licence|readme|license)\.(html|txt) { access_log /var/www/logs/nginx/blocked.log blocked; deny all; }

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

   }
}

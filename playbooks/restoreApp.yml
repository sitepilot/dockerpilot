- hosts: '{{ host }}'

  tasks:
  - name: "[{{ app }}] Check if application directory exists."
    stat:
      path: "{{ appDataDir }}"
    register: appDetails

  - name: "[{{ app }}] Remove application data."
    shell: rm -rf {{ appDataDir }}/* && rm -rf {{ appBackupDir }}/*
    when: appDetails.stat.exists

  - name: "[{{ app }}] Restore application data."
    shell: source /home/{{ becomeUser }}/.restic-env && restic restore latest --tag {{ app }} --target={{ appDir }}
    args:
      executable: /bin/bash
    when: appDetails.stat.exists

  - name: "[{{ app }}] Restore application database."
    shell: CONTAINER=$(docker ps -f "name={{ app }}" -q) && if [ ! -z $CONTAINER ]; then docker exec $CONTAINER dp-restore; fi
    args:
      executable: /bin/bash
    when: appDetails.stat.exists

  - sname: "[{{ app }}] Restore file permissions."
    shell: chown -R {{ becomeUser }}:{{ becomeUser }} {{ appDataDir }} && chown -R {{ becomeUser }}:{{ becomeUser }} {{ appBackupDir }}
    args:
      executable: /bin/bash
    hen: appDetails.stat.exists